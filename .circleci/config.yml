version: 1
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m
      APP_DIR: github-viewer
      BUILD_FILE: ${APP_DIR}/build.gradle
    steps:
      - checkout
      - run:
          name: Update Build File Variable
          command: echo "$BUILD_FILE" > _build_file_var
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "_build_file_var" }}
      - run:
         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "_build_file_var" }}
      - run:
          name: Run Tests
          command: ./gradlew lint test detekt
      - run:
          name: Prepare Artifacts
          command: |
            mkdir /tmp/reports
            cp ${APP_DIR}/build/reports/lint-results.xml /tmp/reports/lint-results.xml
            cp ${APP_DIR}/build/reports/lint-results.html /tmp/reports/lint-results.html

            mkdir /tmp/reports/detekt
            cp ${APP_DIR}/build/reports/detekt/* /tmp/reports/detekt

            mkdir /tmp/test-results
            cp -r ${APP_DIR}/build/test-results/* /tmp/test-results
          when: always
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: /tmp/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: /tmp/test-results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples